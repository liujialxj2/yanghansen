---
import setParameter from '@apostrophecms/apostrophe-astro/lib/aposSetQueryParameter.js';

const { currentUrl, currentCategory, articles } = Astro.props;

// Extract unique categories from articles
const uniqueCategories = [...new Set(articles.map(article => article.category))].filter(Boolean);

// Create category objects array with counts
const categories = [
  {
    label: 'All Articles', 
    value: '',
    count: articles.length
  },
  ...uniqueCategories.map(cat => ({
    label: cat.charAt(0).toUpperCase() + cat.slice(1),
    value: cat,
    count: articles.filter(article => article.category === cat).length
  }))
];

function buildUrl(currentUrl, category) {
  let url = currentUrl;
  if (category) {
    url = setParameter(url, 'category', category);
  } else {
    url = setParameter(url, 'category', null); // Removes the parameter
  }
  if (url.searchParams.get('page')) {
    url = setParameter(url, 'page', null); // Reset to first page
  }
  return url;
}
---

<div class="mb-5" >
  <h3 class="title is-4 mb-4">Filter by Category</h3>
  <div class="tabs is-boxed">
    <ul>
      {categories.map((cat) => (
        <li class={cat.value === currentCategory ? 'is-active' : ''}>
          <a href={buildUrl(currentUrl, cat.value)}>
            <span>{cat.label}</span>
          </a>
        </li>
      ))}
    </ul>
  </div>
</div>

<style>
  .tabs.is-boxed li.is-active a {
    background-color: var(--bulma-primary);
    border-color: var(--bulma-primary);
    color: #000;
  }

  .tabs.is-boxed li.is-active a .tag {
    background-color: #fff;
    color: var(--bulma-primary);
  }

</style>