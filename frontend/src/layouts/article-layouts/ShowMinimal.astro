---
import AposArea from '@apostrophecms/apostrophe-astro/components/AposArea.astro';
import {
  getAttachmentUrl,
  getAttachmentSrcset,
  getFocalPoint,
  getWidth,
  getHeight
} from '../../lib/attachments.js';

const { article } = Astro.props;
const heroImage = article?._heroImage?.[0];
---

{
  heroImage && (
    <div class='container is-max-desktop mb-6'>
      <figure class='image is-3by2'>
        <img
          src={getAttachmentUrl(heroImage, { size: 'full' })}
          srcset={getAttachmentSrcset(heroImage)}
          sizes='(min-width: 1200px) 1200px, 100vw'
          alt={heroImage.alt || ''}
          class='object-fit-cover'
          style={`object-position: ${getFocalPoint(heroImage)}`}
          width={getWidth(heroImage) || '1200'}
          height={getHeight(heroImage) || '800'}
          loading='eager'
        />
      </figure>
    </div>
  )
}
<article class='minimal-article'>
  <div class='section'>
    <div class='container is-max-desktop'>
      <h1 class='title is-2'>{article.title}</h1>
      <p class='subtitle is-6 mb-6'>
        {new Date(article.publishDate).toLocaleDateString()} Â· By {
          article._author[0].title
        }
      </p>

      <div class='content'>
        <AposArea area={article.mainContent} />
      </div>

      {
        article._related?.length > 0 && (
          <div class='box mt-6'>
            <h4 class='title is-5 mb-4'>More Articles</h4>
            <div class='columns is-multiline'>
              {article._related?.map((related) => {
                const relatedHero = related?._heroImage?.[0];
                return (
                  <div class='column is-6'>
                    <a href={related._url} class='has-text-dark'>
                      <div class='card'>
                        {relatedHero && (
                          <div class='card-image'>
                            <figure class='image is-16by9'>
                              <img
                                src={getAttachmentUrl(relatedHero, {
                                  size: 'two-thirds'
                                })}
                                srcset={getAttachmentSrcset(relatedHero)}
                                sizes='(min-width: 1200px) 600px, 50vw'
                                alt={related.title}
                                class='object-fit-cover'
                                style={`object-position: ${getFocalPoint(relatedHero)}`}
                                width={getWidth(relatedHero) || '600'}
                                height={getHeight(relatedHero) || '338'}
                                loading='lazy'
                              />
                            </figure>
                          </div>
                        )}
                        <div class='card-content'>
                          <p class='title is-5'>{related.title}</p>
                        </div>
                      </div>
                    </a>
                  </div>
                );
              })}
            </div>
          </div>
        )
      }
    </div>
  </div>
</article>
<style>

  .minimal-article .title,
  .minimal-article .subtitle {
    color: var(--text-primary);
  }
  /* Fix image fitting */
  .image img {
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  .is-rounded {
    border-radius: 50%;
  }
</style>
